# Generated by Django 5.0.6 on 2024-09-04 08:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("store", "0015_alter_productinshop_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Корзина",
                "verbose_name_plural": "Корзины",
            },
        ),
        migrations.CreateModel(
            name="CartProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(default=1, verbose_name="Количество"),
                ),
                (
                    "date_added",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления"
                    ),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="_cart_products",
                        to="cart.cart",
                        verbose_name="Корзина",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="store.product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар в корзине",
                "verbose_name_plural": "Товары в корзине",
                "ordering": ["date_added"],
            },
        ),
        migrations.AddField(
            model_name="cart",
            name="_products",
            field=models.ManyToManyField(
                through="cart.CartProduct",
                to="store.product",
                verbose_name="Товары в корзине",
            ),
        ),
        migrations.CreateModel(
            name="CartProductAddService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(default=True, verbose_name="Выбран?"),
                ),
                (
                    "cart_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="_cart_product_add_services",
                        to="cart.cartproduct",
                        verbose_name="Товар в корзине",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="store.productaddservice",
                        verbose_name="Доп. услуга",
                    ),
                ),
            ],
            options={
                "ordering": ["service__type"],
            },
        ),
        migrations.AddField(
            model_name="cartproduct",
            name="_services",
            field=models.ManyToManyField(
                through="cart.CartProductAddService",
                to="store.productaddservice",
                verbose_name="Доп. услуги",
            ),
        ),
        migrations.AddConstraint(
            model_name="cartproduct",
            constraint=models.UniqueConstraint(
                fields=("product", "cart"), name="unique_product_cart"
            ),
        ),
    ]
